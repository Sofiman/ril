name: Python Binding

on: [push, pull_request]

defaults:
  run:
    working-directory: ril_py

jobs:
  build: # Workflow credit to https://github.com/samuelcolvin/rtoml/blob/main/.github/workflows/ci.yml
    name: >
      build py3.${{ matrix.python-version }} on ${{ matrix.platform || matrix.os }}
      (${{ matrix.alt_arch_name || matrix.arch }})
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu, macos, windows]
        python-version: ['7', '8', '9', '10']
        arch: [main, alt]
        include:
          - os: ubuntu
            platform: linux
          - os: windows
            ls: dir
          - os: ubuntu
            arch: alt
            alt_arch_name: aarch64
          - os: macos
            arch: alt
            alt_arch_name: arm64
        exclude:
          - os: windows
            arch: alt
          - os: macos
            python-version: '7'
            arch: alt

    runs-on: ${{ format('{0}-latest', matrix.os) }}
    steps:
    - uses: actions/checkout@v3

    - name: set up python
      uses: actions/setup-python@v3
      with:
        python-version: '3.9'

    - name: set up rust
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
        override: true

    - run: rustup target add aarch64-apple-darwin
      if: matrix.os == 'macos'

    - run: rustup toolchain install stable-i686-pc-windows-msvc
      if: matrix.os == 'windows'

    - run: rustup target add i686-pc-windows-msvc
      if: matrix.os == 'windows'

    - name: install python dependencies
      run: pip install -U setuptools wheel twine cibuildwheel

    - name: build sdist
      if: matrix.os == 'ubuntu' && matrix.python-version == '8'
      run: |
        pip install -U setuptools-rust
        python setup.py sdist

    - name: Set up QEMU
      if: matrix.os == 'ubuntu'
      uses: docker/setup-qemu-action@v1
      with:
        platforms: all

    - name: build ${{ matrix.platform || matrix.os }} binaries
      run: cibuildwheel --output-dir wheelhouse
      env:
        CIBW_BUILD: 'cp3${{ matrix.python-version }}-*'
        # rust doesn't seem to be available for musl linux on i686
        CIBW_SKIP: '*-musllinux_i686'
        # we build for "alt_arch_name" if it exists, else 'auto
        CIBW_ARCHS: ${{ matrix.alt_arch_name || 'auto' }}
        # see https://cibuildwheel.readthedocs.io/en/stable/faq/#universal2, tests can run on cross-compiled binaries
        CIBW_ENVIRONMENT: 'PATH="$HOME/.cargo/bin:$PATH"'
        CIBW_ENVIRONMENT_WINDOWS: 'PATH="$UserProfile\.cargo\bin;$PATH"'
        CIBW_MANYLINUX_I686_IMAGE: manylinux2014
        CIBW_MANYLINUX_X86_64_IMAGE: manylinux2014
        CIBW_MUSLLINUX_X86_64_IMAGE: musllinux_1_1
        CIBW_MANYLINUX_AARCH64_IMAGE: manylinux2014
        CIBW_MUSLLINUX_AARCH64_IMAGE: musllinux_1_1
        CIBW_BEFORE_BUILD: rustup show
        CIBW_BEFORE_BUILD_LINUX: >
          curl https://sh.rustup.rs -sSf | sh -s -- --profile=minimal -y &&
          rustup show

    - run: ${{ matrix.ls || 'ls -lh' }} wheelhouse/

    - run: twine check wheelhouse/*

    - uses: actions/upload-artifact@v2
      with:
        name: wheels
        path: wheelhouse
